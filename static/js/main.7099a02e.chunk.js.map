{"version":3,"sources":["Components/Stats.js","Components/StopWatch.js","Components/Header.js","Components/Counter.js","Components/Player.js","Components/AddPlayerForm.js","App.js","index.js"],"names":["Stats","props","totalPlayers","players","length","totalPoints","reduce","total","player","score","className","StopWatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","handleStopWatch","prevstate","handleReset","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","Counter","index","changeScore","Player","svgName","playerName","id","removePlayer","isHighScore","viewBox","d","transform","width","height","PureComponent","AddPlayerForm","value","playerInput","React","createRef","handleValueChange","e","target","handleSubmit","preventDefault","addPlayer","current","onSubmit","type","ref","placeholder","onChange","App","prevPlayerID","handleScoreChange","handleAddPlayer","name","newPlayer","prevPlayerId","prevState","concat","getHighScore","scores","map","p","highScore","max","handleRemovePlayer","filter","highest","key","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7099a02e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Stats = (props) => {\r\n  const totalPlayers = props.players.length;\r\n  const totalPoints = props.players.reduce((total, player) => {\r\n    return total + player.score;\r\n  }, 0);\r\n\r\n  return (\r\n    <table className=\"stats\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Players:</td>\r\n          <td>{totalPlayers}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Total Points:</td>\r\n          <td>{totalPoints}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nStats.propTypes = {\r\n  players: PropTypes.arrayOf(PropTypes.object),\r\n};\r\nexport default Stats;\r\n","import React, { Component } from \"react\";\r\n\r\nclass StopWatch extends Component {\r\n  state = {\r\n    isRunning: false,\r\n    elapsedTime: 0,\r\n    previousTime: 0,\r\n  };\r\n\r\n  // use both of these methds together\r\n  // while the component is mounted on to the dom\r\n  // called by react automatically\r\n  componentDidMount() {\r\n    this.intervalID = setInterval(() => this.tick(), 100);\r\n  }\r\n\r\n  // since components don't always stay in the dom react also provides\r\n  // a componentWillUnmount method for prevent memory leaks\r\n  // for clearing timers cancelling network request\r\n\r\n  //before conponet is destroyed\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  tick = () => {\r\n    if (this.state.isRunning) {\r\n      const now = Date.now();\r\n      this.setState({\r\n        previousTime: now,\r\n        elapsedTime: this.state.elapsedTime + (now - this.state.previousTime),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleStopWatch = () => {\r\n    this.setState((prevstate) => ({\r\n      isRunning: !prevstate.isRunning,\r\n    }));\r\n    if (!this.state.isRunning) {\r\n      this.setState({ previousTime: Date.now() });\r\n    }\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({ elapsedTime: 0 });\r\n  };\r\n\r\n  render() {\r\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\r\n    return (\r\n      <div className=\"stopwatch\">\r\n        <h2>Stopwatch</h2>\r\n        <span className=\"stopwatch-time\">{seconds}</span>\r\n        <button onClick={this.handleStopWatch}>\r\n          {this.state.isRunning ? \"Stop\" : \"Start\"}\r\n        </button>\r\n        <button onClick={this.handleReset}>Reset</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StopWatch;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Stats from \"./Stats\";\r\nimport StopWatch from \"./StopWatch\";\r\n\r\nconst Header = (props) => {\r\n  const { players, title } = props;\r\n\r\n  return (\r\n    <header>\r\n      <Stats players={players}></Stats>\r\n      <h1>{title}</h1>\r\n      <StopWatch></StopWatch>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  players: PropTypes.arrayOf(PropTypes.object),\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Counter = (props) => {\r\n  const { index, score, changeScore } = props;\r\n  // use arrow functions when creating stateless functions in a class\r\n  // because in a method this does'nt refer to the class itself\r\n  // increamentScore = () => {\r\n  //   this.setState({\r\n  //     score: this.state.score + 1,\r\n  //   });\r\n  // };\r\n\r\n  // react covents multiple setState calls into one single call for better perfomence\r\n  // whenever we want to update the state based on the pevious state we need to pass a function instead\r\n  // function argiment is the previous state\r\n\r\n  return (\r\n    <div className=\"counter\">\r\n      <button\r\n        className=\"counter-action decrement\"\r\n        onClick={() => changeScore(index, -1)}\r\n      >\r\n        {\" \"}\r\n        -{\" \"}\r\n      </button>\r\n      <span className=\"counter-score\">{score}</span>\r\n      <button\r\n        className=\"counter-action increment\"\r\n        onClick={() => changeScore(index, 1)}\r\n      >\r\n        {\" \"}\r\n        +{\" \"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCounter.propTypes = {\r\n  index: PropTypes.number,\r\n  score: PropTypes.number,\r\n  changeScore: PropTypes.func,\r\n};\r\n\r\nexport default Counter;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Counter from \"./Counter\";\r\n\r\nclass Player extends PureComponent {\r\n  // second way of declaring props\r\n\r\n  static propTypes = {\r\n    changeScore: PropTypes.func,\r\n    removePlayer: PropTypes.func,\r\n    name: PropTypes.string,\r\n    score: PropTypes.number,\r\n    id: PropTypes.number,\r\n    index: PropTypes.number,\r\n  };\r\n  svgName = \"\";\r\n  render() {\r\n    const {\r\n      playerName,\r\n      id,\r\n      score,\r\n      index,\r\n      removePlayer,\r\n      changeScore,\r\n      isHighScore,\r\n    } = this.props;\r\n\r\n    if (isHighScore) {\r\n      this.svgName = \"is-high-score\";\r\n    } else {\r\n      this.svgName = \"\";\r\n    }\r\n    return (\r\n      <div className=\"player\">\r\n        <span className=\"player-name\">\r\n          <button className=\"remove-player\" onClick={() => removePlayer(id)}>\r\n            ✖\r\n          </button>\r\n          <svg viewBox=\"0 0 44 35\">\r\n            <path\r\n              d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\"\r\n              transform=\"translate(0 0.301727)\"\r\n              className={this.svgName}\r\n            />\r\n            <rect\r\n              width=\"30.4986\"\r\n              height=\"3.07759\"\r\n              transform=\"translate(6.56987 31.5603)\"\r\n            />\r\n          </svg>\r\n          {playerName}\r\n        </span>\r\n        <Counter\r\n          score={score}\r\n          index={index}\r\n          changeScore={changeScore}\r\n        ></Counter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddPlayerForm extends Component {\r\n  // form element in react work differently from regular components\r\n  // Initialize state for the value of the input\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  playerInput = React.createRef();\r\n  // event handler that updates the state\r\n  //passed a dom event as a argument\r\n  handleValueChange = (e) => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  //\r\n  handleSubmit = (e) => {\r\n    // if we don't use preventDefault() it will result in the browser posting a request back to the server\r\n    // and reload the page\r\n    e.preventDefault();\r\n    if (this.state.value !== \"\") {\r\n      this.props.addPlayer(this.playerInput.current.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.playerInput);\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        {/* use self closing tags in form elements */}\r\n        <input\r\n          type=\"text\"\r\n          ref={this.playerInput}\r\n          placeholder=\"Enter a player's name\"\r\n          value={this.state.value}\r\n          //listening for changes on the input\r\n          onChange={this.handleValueChange}\r\n        />\r\n        <input type=\"submit\" value=\"submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPlayerForm;\r\n","import React, { Component } from \"react\";\nimport Header from \"./Components/Header\";\nimport Player from \"./Components/Player\";\nimport AddPlayerForm from \"./Components/AddPlayerForm\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    // The application state - The state where other components as well as the component it self uses the state\n    // The application state is passed to other component via props\n    this.state = {\n      players: [\n        {\n          playerName: \"player 1\",\n          score: 0,\n          id: 1,\n          highest: false,\n        },\n        {\n          playerName: \"player 2\",\n          score: 0,\n          id: 2,\n          highest: false,\n        },\n        {\n          playerName: \"player 3\",\n          score: 0,\n          id: 3,\n          highest: false,\n        },\n        {\n          playerName: \"player 4\",\n          score: 0,\n          id: 4,\n          highest: false,\n        },\n      ],\n    };\n  }\n\n  prevPlayerID = 4;\n\n  handleScoreChange = (index, value) => {\n    if (this.state.players[index].score === 0 && value === -1) {\n      return;\n    }\n    this.setState((prevstate) => ({\n      score: (prevstate.players[index].score += value),\n    }));\n  };\n\n  handleAddPlayer = (name) => {\n    let newPlayer = {\n      playerName: name,\n      score: 0,\n      id: (this.prevPlayerId += 1),\n    };\n    this.setState((prevState) => ({\n      players: prevState.players.concat(newPlayer),\n    }));\n  };\n\n  getHighScore = () => {\n    const scores = this.state.players.map((p) => p.score);\n    const highScore = Math.max(...scores);\n    if (highScore) {\n      return highScore;\n    }\n    return null;\n  };\n\n  handleRemovePlayer = (id) => {\n    this.setState((prevState) => ({\n      players: prevState.players.filter((p) => p.id !== id),\n    }));\n  };\n\n  //render method\n  render() {\n    const highScore = this.getHighScore();\n    return (\n      <div className=\"App scoreboard\">\n        {/* <ScoreBoard></ScoreBoard> */}\n        {/* if number use {}  */}\n        <Header title=\"Scoreboard\" players={this.state.players} />\n        {this.state.players.map((player, index) => (\n          <Player\n            key={player.id.toString()}\n            id={player.id}\n            index={index}\n            playerName={player.playerName}\n            score={player.score}\n            removePlayer={this.handleRemovePlayer}\n            changeScore={this.handleScoreChange}\n            isHighScore={highScore === player.score}\n          />\n        ))}\n        <AddPlayerForm addPlayer={this.handleAddPlayer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// adding bootstap\n// npm install --save react-bootstap bootstrap\n// import before index.css\n// import \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}